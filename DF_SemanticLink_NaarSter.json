{"name":"DF_SemanticLink_NaarSter","ppdf:dataflowId":"4619da68-259d-469a-a7ff-269fe161569b","ppdf:owner":{"tenantId":"0c0338a6-9561-4ee8-b8d6-4e89cbd520a0","userId":"639d9b4a-037b-43aa-bd22-cc6444c9a227"},"ppdf:fastCopy":true,"version":"1.0","culture":"en-US","modifiedTime":"2025-09-18T18:29:58.4392353+00:00","ppdf:outputFileFormat":"Parquet","pbi:mashup":{"fastCombine":false,"allowNativeQueries":true,"queriesMetadata":{"Ster_Items":{"queryId":"6c176070-a594-480b-8285-16808cf47c06","queryName":"Ster_Items","queryGroupId":"720b6596-84e8-4ac9-b1d8-7350b2a9753e"},"Ster_F_measures":{"queryId":"4927e42e-2c15-4627-b1f8-af3e97bdef49","queryName":"Ster_F_measures","queryGroupId":"fa525509-f125-4478-a369-bda95ba86186"},"F_measures_Source":{"queryId":"0d822313-7471-447e-86ff-ad29fddd5d49","queryName":"F_measures_Source","queryGroupId":"d1e1e7fd-7498-40c3-85d6-d65e17f81a52"},"F_relations_Source":{"queryId":"43edc7de-d12b-415f-af94-b7715bceece1","queryName":"F_relations_Source","queryGroupId":"d1e1e7fd-7498-40c3-85d6-d65e17f81a52"},"workspaces_Source":{"queryId":"a18ee164-4777-4f31-a6fd-106337975fb7","queryName":"workspaces_Source","queryGroupId":"d1e1e7fd-7498-40c3-85d6-d65e17f81a52"},"Ster_Multiplicity":{"queryId":"0c9951cf-d269-49de-8c4f-d87ffe8001f6","queryName":"Ster_Multiplicity","queryGroupId":"50503d82-9e7e-46cd-b228-b5f05b00bf62"},"Ster_CrossFilteringBehavior":{"queryId":"c836ed05-c208-4501-859c-15f24a781725","queryName":"Ster_CrossFilteringBehavior","queryGroupId":"50503d82-9e7e-46cd-b228-b5f05b00bf62"},"Ster_F_relations":{"queryId":"7521e12e-2ff2-4eba-9fc0-76b25c7e80e5","queryName":"Ster_F_relations","queryGroupId":"50503d82-9e7e-46cd-b228-b5f05b00bf62"},"Ster_Relation evaluation":{"queryId":"be9bc86a-d0bd-4fb2-af41-f580e02be8d9","queryName":"Ster_Relation evaluation","queryGroupId":"50503d82-9e7e-46cd-b228-b5f05b00bf62"},"Ster_User role":{"queryId":"1b940193-f675-4b18-9222-b80e0055072f","queryName":"Ster_User role","queryGroupId":"b38d21bb-3436-4f7f-9df4-cf522946ecd5"},"Ster_Users":{"queryId":"040248b0-dec0-4622-a8ab-abfbe927edab","queryName":"Ster_Users","queryGroupId":"b38d21bb-3436-4f7f-9df4-cf522946ecd5"},"Ster_F_Users":{"queryId":"efea5421-27f0-41d8-b0dd-180d3e49da27","queryName":"Ster_F_Users","queryGroupId":"b38d21bb-3436-4f7f-9df4-cf522946ecd5"},"Ster_F_Columns":{"queryId":"b57aa43a-9301-4bb7-8dbf-605aa26b24d4","queryName":"Ster_F_Columns","queryGroupId":"f7095952-ce17-442b-8aaf-f171122568de"},"Column_preparation":{"queryId":"8b1f5493-c75f-4589-af5a-ec15e45f65d3","queryName":"Column_preparation","queryGroupId":"496a9fb5-9cf7-43d8-bae3-8cbdd98a7645"},"Column Type_Source":{"queryId":"631256e5-25c3-4d19-adba-3688cccaeffd","queryName":"Column Type_Source","queryGroupId":"d1e1e7fd-7498-40c3-85d6-d65e17f81a52"},"Ster_Column":{"queryId":"6e2f8edf-4836-4c17-9a0c-81fd920e37b8","queryName":"Ster_Column","queryGroupId":"f7095952-ce17-442b-8aaf-f171122568de"},"Ster_Refresh status":{"queryId":"eb6d9c96-52eb-4721-8ca1-fd0533203576","queryName":"Ster_Refresh status","queryGroupId":"c648a9d7-2e63-42fb-b06b-060dcea48624"},"Ster_F_RefreshHistory":{"queryId":"c8ecf0dc-8047-4cb6-9bf9-8413d478f2e4","queryName":"Ster_F_RefreshHistory","queryGroupId":"c648a9d7-2e63-42fb-b06b-060dcea48624"},"Relation evaluation_Source":{"queryId":"ee68d79c-7ad7-4abc-b518-5694f3d9c2a6","queryName":"Relation evaluation_Source","queryGroupId":"d1e1e7fd-7498-40c3-85d6-d65e17f81a52"},"F_RefreshHistory_Source":{"queryId":"39c92bac-e250-4a75-be01-d467d0983191","queryName":"F_RefreshHistory_Source","queryGroupId":"d1e1e7fd-7498-40c3-85d6-d65e17f81a52"},"Ster_Refresh type":{"queryId":"cbce8006-9044-4e84-92b4-7f4a67bd328d","queryName":"Ster_Refresh type","queryGroupId":"c648a9d7-2e63-42fb-b06b-060dcea48624"},"Ster_F_notebook_Refreshes":{"queryId":"72e7a357-7248-4e30-856a-6c8ddbd8a800","queryName":"Ster_F_notebook_Refreshes","queryGroupId":"c648a9d7-2e63-42fb-b06b-060dcea48624"},"Ster_F_Items":{"queryId":"a88a3807-1300-4d92-8436-7502759d98dc","queryName":"Ster_F_Items","queryGroupId":"720b6596-84e8-4ac9-b1d8-7350b2a9753e"},"Capacities_Source":{"queryId":"70f6fa8f-f156-46ec-8cc8-44db59640411","queryName":"Capacities_Source","queryGroupId":"d1e1e7fd-7498-40c3-85d6-d65e17f81a52"},"F_Dataflows_Source":{"queryId":"29c8c979-4a3c-4389-b191-3886d27b6a5e","queryName":"F_Dataflows_Source","queryGroupId":"d1e1e7fd-7498-40c3-85d6-d65e17f81a52"},"Users_Source":{"queryId":"2def8de3-37f0-4981-bdff-b79177a4608f","queryName":"Users_Source","queryGroupId":"d1e1e7fd-7498-40c3-85d6-d65e17f81a52"},"F_Columns_Source":{"queryId":"dd9fe103-f90b-4b95-8161-a6f1c0311bd0","queryName":"F_Columns_Source","queryGroupId":"d1e1e7fd-7498-40c3-85d6-d65e17f81a52"},"Items_Source":{"queryId":"e33d51aa-7353-400e-868c-123fbb35fa6c","queryName":"Items_Source","queryGroupId":"d1e1e7fd-7498-40c3-85d6-d65e17f81a52"},"Ster_Item type":{"queryId":"c2f86c3f-e3b6-44b6-bd09-efb4f17a8492","queryName":"Ster_Item type","queryGroupId":"720b6596-84e8-4ac9-b1d8-7350b2a9753e"},"Ster_Dates":{"queryId":"6157b1d2-2877-4bff-9aea-c9b00d44a237","queryName":"Ster_Dates"},"DefaultDestination":{"queryId":"0ca820c8-8f84-4bbe-bbd2-e62774888c02","queryName":"DefaultDestination"},"Ster_workspaces":{"queryId":"7e1980bf-63b7-45a7-bd98-0b838e963a1b","queryName":"Ster_workspaces"},"Ster_Capacities":{"queryId":"845a27f8-f7bc-4dff-bc31-4ce8ac4197ed","queryName":"Ster_Capacities"},"Ster_Column Type":{"queryId":"aedc0ff9-8993-45ae-b605-963d5e8f8262","queryName":"Ster_Column Type","queryGroupId":"f7095952-ce17-442b-8aaf-f171122568de"},"refreshtimes_notebooks":{"queryId":"bd55ebbb-83b5-403a-a5f4-a2f67696aec4","queryName":"refreshtimes_notebooks","queryGroupId":"d1e1e7fd-7498-40c3-85d6-d65e17f81a52"},"Ster_Items_DataDestination":{"queryId":"76a0db7b-b58c-4b47-9a61-4b95e80720b6","queryName":"Ster_Items_DataDestination"},"Ster_Items_WriteToDataDestination":{"queryId":"c9dd30f6-b255-42c3-b7ff-e8b427d850e5","queryName":"Ster_Items_WriteToDataDestination"},"Ster_Items_TransformForWriteToDataDestination":{"queryId":"d48d8636-bdcf-49a7-bec5-b7aadc736edb","queryName":"Ster_Items_TransformForWriteToDataDestination"},"DefaultStaging":{"queryId":"2219f67f-c9d0-409e-b728-d2c872c3123c","queryName":"DefaultStaging"},"FastCopyStaging":{"queryId":"e2a4a189-178d-42fc-a2e3-1d1009a987af","queryName":"FastCopyStaging"},"Ster_F_measures_DataDestination":{"queryId":"44a98991-1803-46de-93c1-78c0c8851a47","queryName":"Ster_F_measures_DataDestination"},"Ster_F_measures_WriteToDataDestination":{"queryId":"960aa58e-ff95-4f66-9b58-645c378aa614","queryName":"Ster_F_measures_WriteToDataDestination"},"Ster_F_measures_TransformForWriteToDataDestination":{"queryId":"ab1dfac4-64a4-4764-b9bd-46397f2c220b","queryName":"Ster_F_measures_TransformForWriteToDataDestination"},"Ster_Multiplicity_DataDestination":{"queryId":"b01cb88f-df29-401f-82f9-4484e25cb007","queryName":"Ster_Multiplicity_DataDestination"},"Ster_Multiplicity_WriteToDataDestination":{"queryId":"ae5aa7ea-fb6c-422d-932f-3eb7578aebea","queryName":"Ster_Multiplicity_WriteToDataDestination"},"Ster_Multiplicity_TransformForWriteToDataDestination":{"queryId":"6ecd046c-c7e2-4699-9e9e-fc54202d3898","queryName":"Ster_Multiplicity_TransformForWriteToDataDestination"},"Ster_CrossFilteringBehavior_DataDestination":{"queryId":"14f8048d-5fc2-4bba-ab7f-b0f33f48a5ad","queryName":"Ster_CrossFilteringBehavior_DataDestination"},"Ster_CrossFilteringBehavior_WriteToDataDestination":{"queryId":"1af00eea-1253-4625-99ac-dc0daac77e3e","queryName":"Ster_CrossFilteringBehavior_WriteToDataDestination"},"Ster_CrossFilteringBehavior_TransformForWriteToDataDestination":{"queryId":"49557bd4-6188-46db-9810-d40ee7bb5fe2","queryName":"Ster_CrossFilteringBehavior_TransformForWriteToDataDestination"},"Ster_F_relations_DataDestination":{"queryId":"06c65fd0-ff04-425c-bbe8-4d7742e5b3db","queryName":"Ster_F_relations_DataDestination"},"Ster_F_relations_WriteToDataDestination":{"queryId":"08491bd8-a5d8-43b5-9113-6206cbe84abd","queryName":"Ster_F_relations_WriteToDataDestination"},"Ster_F_relations_TransformForWriteToDataDestination":{"queryId":"5cf9522e-35c6-458f-86d6-c6effc31615c","queryName":"Ster_F_relations_TransformForWriteToDataDestination"},"Ster_Relation evaluation_DataDestination":{"queryId":"0f7f2dce-7fd3-4aec-98e4-193f098dba19","queryName":"Ster_Relation evaluation_DataDestination"},"Ster_Relation evaluation_WriteToDataDestination":{"queryId":"3b3d3b2d-bcd4-471e-9d2f-30fd7a7f9c80","queryName":"Ster_Relation evaluation_WriteToDataDestination"},"Ster_Relation evaluation_TransformForWriteToDataDestination":{"queryId":"0a1c151b-5e7a-4751-af8d-76440e270f86","queryName":"Ster_Relation evaluation_TransformForWriteToDataDestination"},"Ster_User role_DataDestination":{"queryId":"38282c94-3400-433b-a2d7-6ba0da91f9a7","queryName":"Ster_User role_DataDestination"},"Ster_User role_WriteToDataDestination":{"queryId":"3d49bcee-3fd1-4fec-9412-15c79381b667","queryName":"Ster_User role_WriteToDataDestination"},"Ster_User role_TransformForWriteToDataDestination":{"queryId":"2d75c7d1-d7a2-4842-9e39-bb7f48c4a0d2","queryName":"Ster_User role_TransformForWriteToDataDestination"},"Ster_Users_DataDestination":{"queryId":"ac6901e4-2632-4a1e-b9eb-721cbd08265d","queryName":"Ster_Users_DataDestination"},"Ster_Users_WriteToDataDestination":{"queryId":"6c35f84a-df79-40d1-b453-2c6b13935f1f","queryName":"Ster_Users_WriteToDataDestination"},"Ster_Users_TransformForWriteToDataDestination":{"queryId":"567081eb-cbca-4db7-b6d9-4c4900fb06fc","queryName":"Ster_Users_TransformForWriteToDataDestination"},"Ster_F_Users_DataDestination":{"queryId":"549b9fdb-675e-4c80-81f8-f03bb57d780a","queryName":"Ster_F_Users_DataDestination"},"Ster_F_Users_WriteToDataDestination":{"queryId":"def079a2-a906-4bbc-8419-5bddadba2462","queryName":"Ster_F_Users_WriteToDataDestination"},"Ster_F_Users_TransformForWriteToDataDestination":{"queryId":"1033151e-602d-4518-a219-ab32a61400db","queryName":"Ster_F_Users_TransformForWriteToDataDestination"},"Ster_F_Columns_DataDestination":{"queryId":"dcfc0d23-7400-4802-b16a-3b12d1e62916","queryName":"Ster_F_Columns_DataDestination"},"Ster_F_Columns_WriteToDataDestination":{"queryId":"c3c4d984-d5d9-4546-bec6-52ab4a10845b","queryName":"Ster_F_Columns_WriteToDataDestination"},"Ster_F_Columns_TransformForWriteToDataDestination":{"queryId":"0c0845c2-6f83-4c5e-b636-400f442804a7","queryName":"Ster_F_Columns_TransformForWriteToDataDestination"},"Ster_Column_DataDestination":{"queryId":"f3658970-0691-481e-ac75-cf1238183ab1","queryName":"Ster_Column_DataDestination"},"Ster_Column_WriteToDataDestination":{"queryId":"73fc8b5e-5caf-4e33-ab8a-9febf454181b","queryName":"Ster_Column_WriteToDataDestination"},"Ster_Column_TransformForWriteToDataDestination":{"queryId":"6cde6c87-88d5-49bb-87ec-2e5cd6cd0e5b","queryName":"Ster_Column_TransformForWriteToDataDestination"},"Ster_Refresh status_DataDestination":{"queryId":"52fac84d-509f-4f61-94b3-90f1769e5060","queryName":"Ster_Refresh status_DataDestination"},"Ster_Refresh status_WriteToDataDestination":{"queryId":"823ca905-a702-4fb0-998c-c913b09e9aa8","queryName":"Ster_Refresh status_WriteToDataDestination"},"Ster_Refresh status_TransformForWriteToDataDestination":{"queryId":"25a32803-7bfc-4c92-9b2e-9e7153f2d8aa","queryName":"Ster_Refresh status_TransformForWriteToDataDestination"},"Ster_F_RefreshHistory_DataDestination":{"queryId":"8dce4fb4-83f4-4d47-8208-a4573e5b8faa","queryName":"Ster_F_RefreshHistory_DataDestination"},"Ster_F_RefreshHistory_WriteToDataDestination":{"queryId":"dd58d507-11ee-4649-b10d-5accf1899ff5","queryName":"Ster_F_RefreshHistory_WriteToDataDestination"},"Ster_F_RefreshHistory_TransformForWriteToDataDestination":{"queryId":"6beaa0dd-45a9-4abd-a3c3-21dd02b288ba","queryName":"Ster_F_RefreshHistory_TransformForWriteToDataDestination"},"Ster_Refresh type_DataDestination":{"queryId":"83fa28cb-2d36-4588-a9f7-fdc2e2236e51","queryName":"Ster_Refresh type_DataDestination"},"Ster_Refresh type_WriteToDataDestination":{"queryId":"d6e4ea65-de66-4a2e-b09d-ce45586d431c","queryName":"Ster_Refresh type_WriteToDataDestination"},"Ster_Refresh type_TransformForWriteToDataDestination":{"queryId":"2f9392a9-a3f8-4fb3-ab4f-826c3ecb2548","queryName":"Ster_Refresh type_TransformForWriteToDataDestination"},"Ster_F_notebook_Refreshes_DataDestination":{"queryId":"2a1bc51c-6068-4264-99b8-8c57246e21bb","queryName":"Ster_F_notebook_Refreshes_DataDestination"},"Ster_F_notebook_Refreshes_WriteToDataDestination":{"queryId":"22dd5bb2-7fb8-4ab1-b1da-6bfac77e1902","queryName":"Ster_F_notebook_Refreshes_WriteToDataDestination"},"Ster_F_notebook_Refreshes_TransformForWriteToDataDestination":{"queryId":"f65cfe9a-ccf2-4bb3-9a94-5560a272b581","queryName":"Ster_F_notebook_Refreshes_TransformForWriteToDataDestination"},"Ster_F_Items_DataDestination":{"queryId":"91267430-7eb0-49f5-971f-9df9cc1dadd9","queryName":"Ster_F_Items_DataDestination"},"Ster_F_Items_WriteToDataDestination":{"queryId":"299e6d18-422a-44c9-bf1a-e972f122e563","queryName":"Ster_F_Items_WriteToDataDestination"},"Ster_F_Items_TransformForWriteToDataDestination":{"queryId":"b46e69e2-1689-4295-b22b-cadbd7bfd641","queryName":"Ster_F_Items_TransformForWriteToDataDestination"},"Ster_Item type_DataDestination":{"queryId":"2c53584e-8722-4e31-9bd3-408426b9c58f","queryName":"Ster_Item type_DataDestination"},"Ster_Item type_WriteToDataDestination":{"queryId":"386560d5-eb01-408a-96a7-9b7dc9a9dc15","queryName":"Ster_Item type_WriteToDataDestination"},"Ster_Item type_TransformForWriteToDataDestination":{"queryId":"5fc21f93-4653-4875-a26b-b9eeb9a4903b","queryName":"Ster_Item type_TransformForWriteToDataDestination"},"Ster_Dates_DataDestination":{"queryId":"75147824-93ad-42dd-9a18-d4016c78ac88","queryName":"Ster_Dates_DataDestination"},"Ster_Dates_WriteToDataDestination":{"queryId":"99704f26-0e88-42ad-a686-eec2806e04ad","queryName":"Ster_Dates_WriteToDataDestination"},"Ster_Dates_TransformForWriteToDataDestination":{"queryId":"810a8a19-4996-4603-a72c-55d19522ce0f","queryName":"Ster_Dates_TransformForWriteToDataDestination"},"Ster_workspaces_DataDestination":{"queryId":"bb239442-effa-413e-849f-4306c3ad13ec","queryName":"Ster_workspaces_DataDestination"},"Ster_workspaces_WriteToDataDestination":{"queryId":"17441e42-c444-4436-ac5b-c9286e9bb2d7","queryName":"Ster_workspaces_WriteToDataDestination"},"Ster_workspaces_TransformForWriteToDataDestination":{"queryId":"a4b8a959-3058-4459-9f9b-8e0969d03759","queryName":"Ster_workspaces_TransformForWriteToDataDestination"},"Ster_Capacities_DataDestination":{"queryId":"7eaffc26-fedb-4736-ae15-04dec12c516a","queryName":"Ster_Capacities_DataDestination"},"Ster_Capacities_WriteToDataDestination":{"queryId":"bf0f1f02-29b0-4742-9825-01c11a5212d9","queryName":"Ster_Capacities_WriteToDataDestination"},"Ster_Capacities_TransformForWriteToDataDestination":{"queryId":"a2c73482-e0cb-424f-9d27-797e5418a784","queryName":"Ster_Capacities_TransformForWriteToDataDestination"},"Ster_Column Type_DataDestination":{"queryId":"68882832-60b5-4ee0-825f-cb1ff1c0b9bb","queryName":"Ster_Column Type_DataDestination"},"Ster_Column Type_WriteToDataDestination":{"queryId":"950b9576-f6d3-49a5-985c-626540895060","queryName":"Ster_Column Type_WriteToDataDestination"},"Ster_Column Type_TransformForWriteToDataDestination":{"queryId":"e1a2b3d8-b645-4bd0-b7e1-a35c1ece92d5","queryName":"Ster_Column Type_TransformForWriteToDataDestination"}},"document":"section Section1;\r\nshared Ster_Items = let\r\n  Source = Items_Source,\r\n  #\"Removed other columns\" = Table.SelectColumns(Source, {\"Id\", \"DisplayName\", \"Description\", \"Type\"}),\r\n  #\"Removed duplicates\" = Table.Distinct(#\"Removed other columns\", {\"Id\", \"DisplayName\", \"Description\", \"Type\"})\r\nin\r\n  #\"Removed duplicates\";\r\nshared Ster_F_measures = let\r\n  Source = F_measures_Source\r\nin\r\n  Source;\r\nshared F_measures_Source = let\r\n  Source = Lakehouse.Contents(null),\r\n  #\"Navigation 1\" = Source{[workspaceId = \"1c0073d5-1ff1-4af1-9a1d-7f57255eb849\"]}[Data],\r\n  #\"Navigation 2\" = #\"Navigation 1\"{[lakehouseId = \"060fba99-17e2-4946-b182-3ab820ed66f8\"]}[Data],\r\n  #\"Navigation 3\" = #\"Navigation 2\"{[Id = \"DB_Measures\", ItemKind = \"Table\"]}[Data]\r\nin\r\n  #\"Navigation 3\";\r\nshared F_relations_Source = let\n  Source = Lakehouse.Contents(null),\n  #\"Navigation 1\" = Source{[workspaceId = \"1c0073d5-1ff1-4af1-9a1d-7f57255eb849\"]}[Data],\n  #\"Navigation 2\" = #\"Navigation 1\"{[lakehouseId = \"060fba99-17e2-4946-b182-3ab820ed66f8\"]}[Data],\n  #\"Navigation 3\" = #\"Navigation 2\"{[Id = \"DB_Relations\", ItemKind = \"Table\"]}[Data],\n  #\"Removed duplicates\" = Table.Distinct(#\"Navigation 3\", {\"Multiplicity\", \"FromTable\", \"FromColumn\", \"ToTable\", \"ToColumn\", \"Active\", \"CrossFilteringBehavior\", \"SecurityFilteringBehavior\", \"JoinOnDateBehavior\", \"RelyOnReferentialIntegrity\", \"State\", \"ModifiedTime\", \"RelationshipName\", \"WSID\", \"SMID\"}),\n  #\"Added custom\" = Table.AddColumn(#\"Removed duplicates\", \"RelationEvaluationMerge\", each [Multiplicity] & \"|\" & [CrossFilteringBehavior]),\n  #\"Merged queries\" = Table.NestedJoin(#\"Added custom\", {\"RelationEvaluationMerge\"}, #\"Relation evaluation_Source\", {\"RelationEvaluationMerge\"}, \"Relation evaluation_Source\", JoinKind.LeftOuter),\n  #\"Expanded Relation evaluation_Source\" = Table.ExpandTableColumn(#\"Merged queries\", \"Relation evaluation_Source\", {\"RelationEvaluationID\"}, {\"RelationEvaluationID\"}),\n  #\"Removed columns\" = Table.RemoveColumns(#\"Expanded Relation evaluation_Source\", {\"RelationEvaluationMerge\"})\nin\n  #\"Removed columns\";\r\nshared workspaces_Source = let\r\n  Source = Lakehouse.Contents(null),\r\n  #\"Navigation 1\" = Source{[workspaceId = \"1c0073d5-1ff1-4af1-9a1d-7f57255eb849\"]}[Data],\r\n  #\"Navigation 2\" = #\"Navigation 1\"{[lakehouseId = \"060fba99-17e2-4946-b182-3ab820ed66f8\"]}[Data],\r\n  #\"Navigation 3\" = #\"Navigation 2\"{[Id = \"DB_Workspaces\", ItemKind = \"Table\"]}[Data],\r\n  #\"Removed other columns 1\" = Table.SelectColumns(#\"Navigation 3\", {\"Id\", \"CapacityId\", \"Name\"}),\r\n  #\"Removed duplicates\" = Table.Distinct(#\"Removed other columns 1\", {\"Id\", \"Name\"}),\r\n  #\"Added custom\" = Table.AddColumn(#\"Removed duplicates\", \"URL\", each \"https://app.powerbi.com/groups/\" & [Id])\r\nin\r\n  #\"Added custom\";\r\nshared Ster_Multiplicity = let\r\n  Source = F_relations_Source,\r\n  #\"Removed other columns\" = Table.SelectColumns(Source, {\"Multiplicity\"}),\r\n  #\"Removed duplicates\" = Table.Distinct(#\"Removed other columns\", {\"Multiplicity\"})\r\nin\r\n  #\"Removed duplicates\";\r\nshared Ster_CrossFilteringBehavior = let\r\n  Source = F_relations_Source,\r\n  #\"Removed other columns\" = Table.SelectColumns(Source, {\"CrossFilteringBehavior\"}),\r\n  #\"Removed duplicates\" = Table.Distinct(#\"Removed other columns\", {\"CrossFilteringBehavior\"})\r\nin\r\n  #\"Removed duplicates\";\r\nshared Ster_F_relations = let\r\n  Source = F_relations_Source,\r\n  #\"Removed other columns\" = Table.SelectColumns(Source, {\"Multiplicity\", \"Active\", \"CrossFilteringBehavior\", \"SecurityFilteringBehavior\", \"RelationshipName\", \"WSID\", \"SMID\", \"RelationEvaluationID\"})\r\nin\r\n  #\"Removed other columns\";\r\nshared #\"Ster_Relation evaluation\" = let\r\n  Source = #\"Relation evaluation_Source\",\r\n  #\"Removed other columns\" = Table.SelectColumns(Source, {\"Relation Evaluation\", \"RelationEvaluationID\"}),\r\n  #\"Removed duplicates\" = Table.Distinct(#\"Removed other columns\", {\"Relation Evaluation\", \"RelationEvaluationID\"})\r\nin\r\n  #\"Removed duplicates\";\r\nshared #\"Ster_User role\" = let\r\n  Source = Users_Source,\r\n  #\"Removed other columns\" = Table.SelectColumns(Source, {\"Role\"}),\r\n  #\"Removed duplicates\" = Table.Distinct(#\"Removed other columns\", {\"Role\"})\r\nin\r\n  #\"Removed duplicates\";\r\nshared Ster_Users = let\r\n  Source = Users_Source,\r\n  #\"Removed other columns\" = Table.SelectColumns(Source, {\"UserName\", \"EmailAddress\", \"Type\", \"UserID\"}),\r\n  #\"Removed duplicates\" = Table.Distinct(#\"Removed other columns\", {\"UserID\", \"EmailAddress\", \"UserName\"})\r\nin\r\n  #\"Removed duplicates\";\r\nshared Ster_F_Users = let\r\n  Source = Users_Source,\r\n  #\"Removed other columns\" = Table.SelectColumns(Source, {\"Role\", \"UserID\", \"WSID\"})\r\nin\r\n  #\"Removed other columns\";\r\nshared Ster_F_Columns = let\r\n  Source = F_Columns_Source,\r\n  #\"Added custom\" = Table.AddColumn(Source, \"TempColumnID\", each [TableName] & \"|\" & [ColumnName]),\r\n  #\"Merged queries\" = Table.NestedJoin(#\"Added custom\", {\"TempColumnID\"}, Column_preparation, {\"TempColumnID\"}, \"Column\", JoinKind.LeftOuter),\r\n  #\"Expanded Column\" = Table.ExpandTableColumn(#\"Merged queries\", \"Column\", {\"ColumnID\"}, {\"ColumnID\"}),\r\n  #\"Removed other columns\" = Table.SelectColumns(#\"Expanded Column\", {\"Type\", \"DataType\", \"Hidden\", \"FormatString\", \"DataCategory\", \"DisplayFolder\", \"Key\", \"Unique\", \"SortByColumn\", \"SummarizeBy\", \"IsAvailableinMDX\", \"EncodingHint\", \"State\", \"TotalSize\", \"WSID\", \"SMID\", \"ColumnID\"})\r\nin\r\n  #\"Removed other columns\";\r\nshared Column_preparation = let\n  Source = F_Columns_Source,\n  #\"Removed other columns\" = Table.SelectColumns(Source, {\"TableName\", \"ColumnName\", \"Description\", \"Source\"}),\n  #\"Removed duplicates\" = Table.Distinct(#\"Removed other columns\", {\"TableName\", \"ColumnName\", \"Description\", \"Source\"}),\n  #\"Added index\" = Table.AddIndexColumn(#\"Removed duplicates\", \"ColumnID\", 1, 1, Int64.Type),\n  #\"Added custom\" = Table.AddColumn(#\"Added index\", \"TempColumnID\", each [TableName] & \"|\" & [ColumnName])\nin\n  #\"Added custom\";\r\nshared #\"Column Type_Source\" = let\r\n  Source = Lakehouse.Contents(null),\r\n  Navigation = Source{[workspaceId = \"8178109a-dcf7-4be7-bf55-493744879c00\"]}[Data],\r\n  #\"Navigation 1\" = Navigation{[lakehouseId = \"a47416e1-d639-4273-a951-5ce979e3dd21\"]}[Data],\r\n  #\"Navigation 2\" = #\"Navigation 1\"{[Id = \"l_fabric_columns\", ItemKind = \"Table\"]}[Data],\r\n  #\"Removed other columns\" = Table.SelectColumns(#\"Navigation 2\", {\"Type\"}),\r\n  #\"Removed duplicates\" = Table.Distinct(#\"Removed other columns\", {\"Type\"})\r\nin\r\n  #\"Removed duplicates\";\r\nshared Ster_Column = let\r\n  Source = Column_preparation,\r\n  #\"Removed other columns\" = Table.SelectColumns(Source, {\"ColumnID\", \"Source\", \"Description\", \"ColumnName\", \"TableName\"})\r\nin\r\n  #\"Removed other columns\";\r\nshared #\"Ster_Refresh status\" = let\r\n  Source = F_RefreshHistory_Source,\r\n  #\"Removed other columns\" = Table.SelectColumns(Source, {\"Status\"}),\r\n  #\"Removed duplicates\" = Table.Distinct(#\"Removed other columns\", {\"Status\"})\r\nin\r\n  #\"Removed duplicates\";\r\nshared Ster_F_RefreshHistory = let\r\n  Source = F_RefreshHistory_Source,\r\n  #\"Inserted date\" = Table.AddColumn(Source, \"StartDate\", each Date.From([StartTime]), type nullable date),\r\n  #\"Inserted time\" = Table.AddColumn(#\"Inserted date\", \"Start Time\", each DateTime.Time([StartTime]), type nullable time),\r\n  #\"Inserted time 1\" = Table.AddColumn(#\"Inserted time\", \"End Time\", each DateTime.Time([EndTime]), type nullable time),\r\n  #\"Inserted date 1\" = Table.AddColumn(#\"Inserted time 1\", \"EndDate\", each DateTime.Date([EndTime]), type nullable date)\r\nin\r\n  #\"Inserted date 1\";\r\nshared #\"Relation evaluation_Source\" = let\n  Source = Lakehouse.Contents(null),\n  #\"Navigation 1\" = Source{[workspaceId = \"1c0073d5-1ff1-4af1-9a1d-7f57255eb849\"]}[Data],\n  #\"Navigation 2\" = #\"Navigation 1\"{[lakehouseId = \"060fba99-17e2-4946-b182-3ab820ed66f8\"]}[Data],\n  #\"Navigation 3\" = #\"Navigation 2\"{[Id = \"DB_Relations\", ItemKind = \"Table\"]}[Data],\n  #\"Removed other columns\" = Table.SelectColumns(#\"Navigation 3\", {\"Multiplicity\", \"CrossFilteringBehavior\"}),\n  #\"Removed duplicates\" = Table.Distinct(#\"Removed other columns\", {\"Multiplicity\", \"CrossFilteringBehavior\"}),\n  #\"Inserted conditional column\" = Table.AddColumn(#\"Removed duplicates\", \"RelationEvaluationID\", \n      each if ([Multiplicity] = \"m:1\" and [CrossFilteringBehavior] = \"OneDirection\") then 1 \n      else if [Multiplicity] = \"1:1\" then 2\n      else if ([Multiplicity] = \"m:m\" or [CrossFilteringBehavior] = \"BothDirections\") then 3\n      else 4, Int64.Type),\n  #\"Inserted conditional column 1\" = Table.AddColumn(#\"Inserted conditional column\", \"Relation Evaluation\", each if [RelationEvaluationID] = 1 then \"Goede Relatie\" else if [RelationEvaluationID] = 3 then \"Slechte relatie\" else if [RelationEvaluationID] = 2 then \"Aanvaardbare relatie\" else \"\", type text),\n  #\"Added custom\" = Table.AddColumn(#\"Inserted conditional column 1\", \"RelationEvaluationMerge\", each [Multiplicity] & \"|\" & [CrossFilteringBehavior], type text)\nin\n  #\"Added custom\";\r\nshared F_RefreshHistory_Source = let\n  Source = Lakehouse.Contents(null),\n  #\"Navigation 1\" = Source{[workspaceId = \"1c0073d5-1ff1-4af1-9a1d-7f57255eb849\"]}[Data],\n  #\"Navigation 2\" = #\"Navigation 1\"{[lakehouseId = \"060fba99-17e2-4946-b182-3ab820ed66f8\"]}[Data],\n  #\"Navigation 3\" = #\"Navigation 2\"{[Id = \"DB_SM_RefreshHistory\", ItemKind = \"Table\"]}[Data],\n  #\"Changed column type\" = Table.TransformColumnTypes(#\"Navigation 3\", {{\"StartTime\", type datetime}, {\"EndTime\", type datetime}})\nin\n  #\"Changed column type\";\r\nshared #\"Ster_Refresh type\" = let\r\n  Source = F_RefreshHistory_Source,\r\n  #\"Removed other columns\" = Table.SelectColumns(Source, {\"RefreshType\"}),\r\n  #\"Removed duplicates\" = Table.Distinct(#\"Removed other columns\", {\"RefreshType\"})\r\nin\r\n  #\"Removed duplicates\";\r\nshared Ster_F_notebook_Refreshes = let\n  Source = refreshtimes_notebooks,\n  #\"Inserted date\" = Table.AddColumn(Source, \"StartDate\", each Date.From([StartTime]), type nullable date),\n  #\"Inserted time\" = Table.AddColumn(#\"Inserted date\", \"Start Time\", each DateTime.Time([StartTime]), type nullable time),\n  #\"Inserted time 1\" = Table.AddColumn(#\"Inserted time\", \"End Time\", each DateTime.Time([EndTime]), type nullable time),\n  #\"Inserted date 1\" = Table.AddColumn(#\"Inserted time 1\", \"EndDate\", each DateTime.Date([EndTime]), type nullable date)\nin\n  #\"Inserted date 1\";\r\nshared Ster_F_Items = let\r\n  Source = Items_Source,\r\n  #\"Removed other columns\" = Table.SelectColumns(Source, {\"WSID\",  \"Type\", \"Id\"})\r\nin\r\n  #\"Removed other columns\";\r\nshared Capacities_Source = let\r\n  Source = Lakehouse.Contents(null),\r\n  #\"Navigation 1\" = Source{[workspaceId = \"1c0073d5-1ff1-4af1-9a1d-7f57255eb849\"]}[Data],\r\n  #\"Navigation 2\" = #\"Navigation 1\"{[lakehouseId = \"060fba99-17e2-4946-b182-3ab820ed66f8\"]}[Data],\r\n  #\"Navigation 3\" = #\"Navigation 2\"{[Id = \"DB_Capacities\", ItemKind = \"Table\"]}[Data]\r\nin\r\n  #\"Navigation 3\";\r\nshared F_Dataflows_Source = let\n  Source = Lakehouse.Contents(null),\n  #\"Navigation 1\" = Source{[workspaceId = \"1c0073d5-1ff1-4af1-9a1d-7f57255eb849\"]}[Data],\n  #\"Navigation 2\" = #\"Navigation 1\"{[lakehouseId = \"060fba99-17e2-4946-b182-3ab820ed66f8\"]}[Data],\n  #\"Navigation 3\" = #\"Navigation 2\"{[Id = \"DB_Dataflows\", ItemKind = \"Table\"]}[Data],\n  #\"Removed other columns\" = Table.AddColumn(\n    Table.RenameColumns(\n    Table.SelectColumns(#\"Navigation 3\", {\"DataflowId\", \"DataflowName\", \"Description\", \"WSID\"}),\n    {\n        {\"DataflowId\",\"Id\"},{\"DataflowName\",\"DisplayName\"}\n    }\n    )\n    , \"Type\", each \"DataFlow\", type text)\nin\n  #\"Removed other columns\";\r\nshared Users_Source = let\n  Source = Lakehouse.Contents(null),\n  #\"Navigation 1\" = Source{[workspaceId = \"1c0073d5-1ff1-4af1-9a1d-7f57255eb849\"]}[Data],\n  #\"Navigation 2\" = #\"Navigation 1\"{[lakehouseId = \"060fba99-17e2-4946-b182-3ab820ed66f8\"]}[Data],\n  #\"Navigation 3\" = #\"Navigation 2\"{[Id = \"DB_Users\", ItemKind = \"Table\"]}[Data]\nin\n  #\"Navigation 3\";\r\nshared F_Columns_Source = let\n  Source = Lakehouse.Contents(null),\n  #\"Navigation 1\" = Source{[workspaceId = \"1c0073d5-1ff1-4af1-9a1d-7f57255eb849\"]}[Data],\n  #\"Navigation 2\" = #\"Navigation 1\"{[lakehouseId = \"060fba99-17e2-4946-b182-3ab820ed66f8\"]}[Data],\n  #\"Navigation 3\" = #\"Navigation 2\"{[Id = \"DB_Columns\", ItemKind = \"Table\"]}[Data]\nin\n  #\"Navigation 3\";\r\nshared Items_Source = let\n  Source = Lakehouse.Contents(null),\n  #\"Navigation 1\" = Source{[workspaceId = \"1c0073d5-1ff1-4af1-9a1d-7f57255eb849\"]}[Data],\n  #\"Navigation 2\" = #\"Navigation 1\"{[lakehouseId = \"060fba99-17e2-4946-b182-3ab820ed66f8\"]}[Data],\n  #\"Navigation 3\" = #\"Navigation 2\"{[Id = \"DB_Items\", ItemKind = \"Table\"]}[Data],\n  #\"Removed other columns\" = Table.SelectColumns(#\"Navigation 3\", {\"WSID\", \"Id\", \"DisplayName\", \"Description\", \"Type\"}),\n  #\"Appended query\" = Table.Combine({#\"Removed other columns\", F_Dataflows_Source}),\r\n  #\"Trimmed text\" = Table.TransformColumns(#\"Appended query\", {{\"Type\", each Text.Trim(_), type nullable text}}),\r\n  #\"Cleaned text\" = Table.TransformColumns(#\"Trimmed text\", {{\"Type\", each Text.Clean(_), type nullable text}}),\r\n  #\"Capitalized each word\" = Table.TransformColumns(#\"Cleaned text\", {{\"Type\", each Text.Proper(_), type nullable text}})\nin\n  #\"Capitalized each word\";\r\nshared #\"Ster_Item type\" = let\r\n  Source = Items_Source,\r\n  #\"Removed other columns\" = Table.SelectColumns(Source, {\"Type\"}),\r\n  #\"Removed duplicates\" = Table.Distinct(#\"Removed other columns\", {\"Type\"})\r\nin\r\n  #\"Removed duplicates\";\r\nshared Ster_Dates = let\n  minStartdate = List.Min(Ster_F_RefreshHistory[StartDate]),\n  maxStartdate = List.Max(Ster_F_RefreshHistory[StartDate]),\n  minEnddate = List.Min(Ster_F_RefreshHistory[EndDate]),\n  MaxEnddate = List.Max(Ster_F_RefreshHistory[EndDate]),\n  mindate = List.Min({minStartdate, minEnddate}),\n  maxdate = List.Max({maxStartdate, MaxEnddate}),\n    resultlist = List.Dates(\n            mindate,\n            Duration.Days(maxdate - mindate)+1,\n            #duration(1,0,0,0)\n    ),\n    #\"Converted to Table\" = Table.FromList(resultlist, Splitter.SplitByNothing(), null, null, ExtraValues.Error),\n    #\"Changed Type\" = Table.TransformColumnTypes(#\"Converted to Table\",{{\"Column1\", type date}}),\r\n  #\"Renamed columns\" = Table.RenameColumns(#\"Changed Type\", {{\"Column1\", \"Date\"}})\nin\n    #\"Renamed columns\";\r\nshared DefaultDestination = let\r\n  Source = Lakehouse.Contents([CreateNavigationProperties = false, EnableFolding = false]),\r\n  #\"Navigation 1\" = Source{[workspaceId = \"1c0073d5-1ff1-4af1-9a1d-7f57255eb849\"]}[Data],\r\n  #\"Navigation 2\" = #\"Navigation 1\"{[lakehouseId = \"060fba99-17e2-4946-b182-3ab820ed66f8\"]}[Data]\r\nin\r\n  #\"Navigation 2\";\r\nshared Ster_workspaces = let\r\n  Source = workspaces_Source\r\nin\r\n  Source;\r\nshared Ster_Capacities = let\r\n  Source = Capacities_Source\r\nin\r\n  Source;\r\nshared #\"Ster_Column Type\" = let\r\n  Source = #\"Column Type_Source\"\r\nin\r\n  Source;\r\nshared refreshtimes_notebooks = let\r\n  Source = Lakehouse.Contents(null),\r\n  #\"Navigation 1\" = Source{[workspaceId = \"1c0073d5-1ff1-4af1-9a1d-7f57255eb849\"]}[Data],\r\n  #\"Navigation 2\" = #\"Navigation 1\"{[lakehouseId = \"060fba99-17e2-4946-b182-3ab820ed66f8\"]}[Data],\r\n  #\"Navigation 3\" = #\"Navigation 2\"{[Id = \"refreshtimes_notebooks\", ItemKind = \"Table\"]}[Data]\r\nin\r\n  #\"Navigation 3\";\r\nshared Ster_Items_DataDestination = let\r\n  Target = DefaultDestination,\r\n  ArtifactNavigation = Target{[ItemKind = \"Table\", Id = \"Ster_Items\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(ArtifactNavigation, #table(type table[Id = nullable Text.Type, DisplayName = nullable Text.Type, Description = nullable Text.Type, Type = nullable Text.Type], {}), [DeleteWhenEmpty = true])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared Ster_Items_WriteToDataDestination = let\r\n  Ster_Items_WriteToDataDestination = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = Ster_Items_DataDestination], (txn) => {TableAction.DeleteRows(txn[Target]), () => TableAction.InsertRows(txn[Target], Ster_Items_TransformForWriteToDataDestination), Action.DoNothing}))\r\nin\r\n  Ster_Items_WriteToDataDestination;\r\nshared Ster_Items_TransformForWriteToDataDestination = let\r\n    SourceTable = Table.SelectColumns(Ster_Items, {\"Id\", \"DisplayName\", \"Description\", \"Type\"})\r\nin\r\n    SourceTable;\r\nshared DefaultStaging = let\r\n  DefaultStaging = Pipeline.DefaultModelStorage()\r\nin\r\n  DefaultStaging;\r\nshared FastCopyStaging = let\r\n  FastCopyStaging = Pipeline.FastCopyModelStorage(DefaultStaging, [Required = false])\r\nin\r\n  FastCopyStaging;\r\nshared Ster_F_measures_DataDestination = let\r\n  Target = DefaultDestination,\r\n  ArtifactNavigation = Target{[ItemKind = \"Table\", Id = \"Ster_F_measures\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(ArtifactNavigation, #table(type table[TableName = nullable Text.Type, MeasureName = nullable Text.Type, MeasureExpression = nullable Text.Type, MeasureDataType = nullable Text.Type, MeasureHidden = nullable Logical.Type, MeasureDisplayFolder = nullable Text.Type, MeasureDescription = nullable Text.Type, FormatString = nullable Text.Type, DataCategory = nullable Text.Type, WSID = nullable Text.Type, SMID = nullable Text.Type], {}), [DeleteWhenEmpty = true])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared Ster_F_measures_WriteToDataDestination = let\r\n  Ster_F_measures_WriteToDataDestination = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = Ster_F_measures_DataDestination], (txn) => {TableAction.DeleteRows(txn[Target]), () => TableAction.InsertRows(txn[Target], Ster_F_measures_TransformForWriteToDataDestination), Action.DoNothing}))\r\nin\r\n  Ster_F_measures_WriteToDataDestination;\r\nshared Ster_F_measures_TransformForWriteToDataDestination = let\r\n    SourceTable = Table.SelectColumns(Ster_F_measures, {\"TableName\", \"MeasureName\", \"MeasureExpression\", \"MeasureDataType\", \"MeasureHidden\", \"MeasureDisplayFolder\", \"MeasureDescription\", \"FormatString\", \"DataCategory\", \"WSID\", \"SMID\"})\r\nin\r\n    SourceTable;\r\nshared Ster_Multiplicity_DataDestination = let\r\n  Target = DefaultDestination,\r\n  ArtifactNavigation = Target{[ItemKind = \"Table\", Id = \"Ster_Multiplicity\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(ArtifactNavigation, #table(type table[Multiplicity = nullable Text.Type], {}), [DeleteWhenEmpty = true])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared Ster_Multiplicity_WriteToDataDestination = let\r\n  Ster_Multiplicity_WriteToDataDestination = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = Ster_Multiplicity_DataDestination], (txn) => {TableAction.DeleteRows(txn[Target]), () => TableAction.InsertRows(txn[Target], Ster_Multiplicity_TransformForWriteToDataDestination), Action.DoNothing}))\r\nin\r\n  Ster_Multiplicity_WriteToDataDestination;\r\nshared Ster_Multiplicity_TransformForWriteToDataDestination = let\r\n    SourceTable = Table.SelectColumns(Ster_Multiplicity, {\"Multiplicity\"})\r\nin\r\n    SourceTable;\r\nshared Ster_CrossFilteringBehavior_DataDestination = let\r\n  Target = DefaultDestination,\r\n  ArtifactNavigation = Target{[ItemKind = \"Table\", Id = \"Ster_CrossFilteringBehavior\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(ArtifactNavigation, #table(type table[CrossFilteringBehavior = nullable Text.Type], {}), [DeleteWhenEmpty = true])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared Ster_CrossFilteringBehavior_WriteToDataDestination = let\r\n  Ster_CrossFilteringBehavior_WriteToDataDestination = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = Ster_CrossFilteringBehavior_DataDestination], (txn) => {TableAction.DeleteRows(txn[Target]), () => TableAction.InsertRows(txn[Target], Ster_CrossFilteringBehavior_TransformForWriteToDataDestination), Action.DoNothing}))\r\nin\r\n  Ster_CrossFilteringBehavior_WriteToDataDestination;\r\nshared Ster_CrossFilteringBehavior_TransformForWriteToDataDestination = let\r\n    SourceTable = Table.SelectColumns(Ster_CrossFilteringBehavior, {\"CrossFilteringBehavior\"})\r\nin\r\n    SourceTable;\r\nshared Ster_F_relations_DataDestination = let\r\n  Target = DefaultDestination,\r\n  ArtifactNavigation = Target{[ItemKind = \"Table\", Id = \"Ster_F_relations\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(ArtifactNavigation, #table(type table[Multiplicity = nullable Text.Type, Active = nullable Logical.Type, CrossFilteringBehavior = nullable Text.Type, SecurityFilteringBehavior = nullable Text.Type, RelationshipName = nullable Text.Type, WSID = nullable Text.Type, SMID = nullable Text.Type, RelationEvaluationID = nullable Int64.Type], {}), [DeleteWhenEmpty = true])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared Ster_F_relations_WriteToDataDestination = let\r\n  Ster_F_relations_WriteToDataDestination = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = Ster_F_relations_DataDestination], (txn) => {TableAction.DeleteRows(txn[Target]), () => TableAction.InsertRows(txn[Target], Ster_F_relations_TransformForWriteToDataDestination), Action.DoNothing}))\r\nin\r\n  Ster_F_relations_WriteToDataDestination;\r\nshared Ster_F_relations_TransformForWriteToDataDestination = let\r\n    SourceTable = Table.SelectColumns(Ster_F_relations, {\"Multiplicity\", \"Active\", \"CrossFilteringBehavior\", \"SecurityFilteringBehavior\", \"RelationshipName\", \"WSID\", \"SMID\", \"RelationEvaluationID\"})\r\nin\r\n    SourceTable;\r\nshared #\"Ster_Relation evaluation_DataDestination\" = let\r\n  Target = DefaultDestination,\r\n  ArtifactNavigation = Target{[ItemKind = \"Table\", Id = \"Ster_Relation evaluation\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(ArtifactNavigation, #table(type table[#\"Relation Evaluation\" = nullable Text.Type, RelationEvaluationID = nullable Int64.Type], {}), [DeleteWhenEmpty = true])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared #\"Ster_Relation evaluation_WriteToDataDestination\" = let\r\n  #\"Ster_Relation evaluation_WriteToDataDestination\" = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = #\"Ster_Relation evaluation_DataDestination\"], (txn) => {TableAction.DeleteRows(txn[Target]), () => TableAction.InsertRows(txn[Target], #\"Ster_Relation evaluation_TransformForWriteToDataDestination\"), Action.DoNothing}))\r\nin\r\n  #\"Ster_Relation evaluation_WriteToDataDestination\";\r\nshared #\"Ster_Relation evaluation_TransformForWriteToDataDestination\" = let\r\n    SourceTable = Table.SelectColumns(#\"Ster_Relation evaluation\", {\"Relation Evaluation\", \"RelationEvaluationID\"})\r\nin\r\n    SourceTable;\r\nshared #\"Ster_User role_DataDestination\" = let\r\n  Target = DefaultDestination,\r\n  ArtifactNavigation = Target{[ItemKind = \"Table\", Id = \"Ster_User role\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(ArtifactNavigation, #table(type table[Role = nullable Text.Type], {}), [DeleteWhenEmpty = true])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared #\"Ster_User role_WriteToDataDestination\" = let\r\n  #\"Ster_User role_WriteToDataDestination\" = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = #\"Ster_User role_DataDestination\"], (txn) => {TableAction.DeleteRows(txn[Target]), () => TableAction.InsertRows(txn[Target], #\"Ster_User role_TransformForWriteToDataDestination\"), Action.DoNothing}))\r\nin\r\n  #\"Ster_User role_WriteToDataDestination\";\r\nshared #\"Ster_User role_TransformForWriteToDataDestination\" = let\r\n    SourceTable = Table.SelectColumns(#\"Ster_User role\", {\"Role\"})\r\nin\r\n    SourceTable;\r\nshared Ster_Users_DataDestination = let\r\n  Target = DefaultDestination,\r\n  ArtifactNavigation = Target{[ItemKind = \"Table\", Id = \"Ster_Users\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(ArtifactNavigation, #table(type table[UserName = nullable Text.Type, EmailAddress = nullable Text.Type, Type = nullable Text.Type, UserID = nullable Text.Type], {}), [DeleteWhenEmpty = true])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared Ster_Users_WriteToDataDestination = let\r\n  Ster_Users_WriteToDataDestination = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = Ster_Users_DataDestination], (txn) => {TableAction.DeleteRows(txn[Target]), () => TableAction.InsertRows(txn[Target], Ster_Users_TransformForWriteToDataDestination), Action.DoNothing}))\r\nin\r\n  Ster_Users_WriteToDataDestination;\r\nshared Ster_Users_TransformForWriteToDataDestination = let\r\n    SourceTable = Table.SelectColumns(Ster_Users, {\"UserName\", \"EmailAddress\", \"Type\", \"UserID\"})\r\nin\r\n    SourceTable;\r\nshared Ster_F_Users_DataDestination = let\r\n  Target = DefaultDestination,\r\n  ArtifactNavigation = Target{[ItemKind = \"Table\", Id = \"Ster_F_Users\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(ArtifactNavigation, #table(type table[Role = nullable Text.Type, UserID = nullable Text.Type, WSID = nullable Text.Type], {}), [DeleteWhenEmpty = true])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared Ster_F_Users_WriteToDataDestination = let\r\n  Ster_F_Users_WriteToDataDestination = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = Ster_F_Users_DataDestination], (txn) => {TableAction.DeleteRows(txn[Target]), () => TableAction.InsertRows(txn[Target], Ster_F_Users_TransformForWriteToDataDestination), Action.DoNothing}))\r\nin\r\n  Ster_F_Users_WriteToDataDestination;\r\nshared Ster_F_Users_TransformForWriteToDataDestination = let\r\n    SourceTable = Table.SelectColumns(Ster_F_Users, {\"Role\", \"UserID\", \"WSID\"})\r\nin\r\n    SourceTable;\r\nshared Ster_F_Columns_DataDestination = let\r\n  Target = DefaultDestination,\r\n  ArtifactNavigation = Target{[ItemKind = \"Table\", Id = \"Ster_F_Columns\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(ArtifactNavigation, #table(type table[Type = nullable Text.Type, DataType = nullable Text.Type, Hidden = nullable Logical.Type, FormatString = nullable Text.Type, DataCategory = nullable Text.Type, DisplayFolder = nullable Text.Type, Key = nullable Logical.Type, Unique = nullable Logical.Type, SortByColumn = nullable Text.Type, SummarizeBy = nullable Text.Type, IsAvailableinMDX = nullable Logical.Type, EncodingHint = nullable Text.Type, State = nullable Text.Type, TotalSize = nullable Int64.Type, WSID = nullable Text.Type, SMID = nullable Text.Type, ColumnID = nullable Int64.Type], {}), [DeleteWhenEmpty = true])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared Ster_F_Columns_WriteToDataDestination = let\r\n  Ster_F_Columns_WriteToDataDestination = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = Ster_F_Columns_DataDestination], (txn) => {TableAction.DeleteRows(txn[Target]), () => TableAction.InsertRows(txn[Target], Ster_F_Columns_TransformForWriteToDataDestination), Action.DoNothing}))\r\nin\r\n  Ster_F_Columns_WriteToDataDestination;\r\nshared Ster_F_Columns_TransformForWriteToDataDestination = let\r\n    SourceTable = Table.SelectColumns(Ster_F_Columns, {\"Type\", \"DataType\", \"Hidden\", \"FormatString\", \"DataCategory\", \"DisplayFolder\", \"Key\", \"Unique\", \"SortByColumn\", \"SummarizeBy\", \"IsAvailableinMDX\", \"EncodingHint\", \"State\", \"TotalSize\", \"WSID\", \"SMID\", \"ColumnID\"})\r\nin\r\n    SourceTable;\r\nshared Ster_Column_DataDestination = let\r\n  Target = DefaultDestination,\r\n  ArtifactNavigation = Target{[ItemKind = \"Table\", Id = \"Ster_Column\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(ArtifactNavigation, #table(type table[ColumnID = nullable Int64.Type, Source = nullable Text.Type, Description = nullable Text.Type, ColumnName = nullable Text.Type, TableName = nullable Text.Type], {}), [DeleteWhenEmpty = true])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared Ster_Column_WriteToDataDestination = let\r\n  Ster_Column_WriteToDataDestination = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = Ster_Column_DataDestination], (txn) => {TableAction.DeleteRows(txn[Target]), () => TableAction.InsertRows(txn[Target], Ster_Column_TransformForWriteToDataDestination), Action.DoNothing}))\r\nin\r\n  Ster_Column_WriteToDataDestination;\r\nshared Ster_Column_TransformForWriteToDataDestination = let\r\n    SourceTable = Table.SelectColumns(Ster_Column, {\"ColumnID\", \"Source\", \"Description\", \"ColumnName\", \"TableName\"})\r\nin\r\n    SourceTable;\r\nshared #\"Ster_Refresh status_DataDestination\" = let\r\n  Target = DefaultDestination,\r\n  ArtifactNavigation = Target{[ItemKind = \"Table\", Id = \"Ster_Refresh status\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(ArtifactNavigation, #table(type table[Status = nullable Text.Type], {}), [DeleteWhenEmpty = true])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared #\"Ster_Refresh status_WriteToDataDestination\" = let\r\n  #\"Ster_Refresh status_WriteToDataDestination\" = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = #\"Ster_Refresh status_DataDestination\"], (txn) => {TableAction.DeleteRows(txn[Target]), () => TableAction.InsertRows(txn[Target], #\"Ster_Refresh status_TransformForWriteToDataDestination\"), Action.DoNothing}))\r\nin\r\n  #\"Ster_Refresh status_WriteToDataDestination\";\r\nshared #\"Ster_Refresh status_TransformForWriteToDataDestination\" = let\r\n    SourceTable = Table.SelectColumns(#\"Ster_Refresh status\", {\"Status\"})\r\nin\r\n    SourceTable;\r\nshared Ster_F_RefreshHistory_DataDestination = let\r\n  Target = DefaultDestination,\r\n  ArtifactNavigation = Target{[ItemKind = \"Table\", Id = \"Ster_F_RefreshHistory\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(ArtifactNavigation, #table(type table[RequestId = nullable Text.Type, RefreshType = nullable Text.Type, StartTime = nullable DateTime.Type, EndTime = nullable DateTime.Type, ErrorCode = nullable Text.Type, ErrorDescription = nullable Text.Type, Status = nullable Text.Type, ExtendedStatus = nullable Text.Type, WSID = nullable Text.Type, SMID = nullable Text.Type, StartDate = nullable Date.Type, EndDate = nullable Date.Type], {}), [DeleteWhenEmpty = true])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared Ster_F_RefreshHistory_WriteToDataDestination = let\r\n  Ster_F_RefreshHistory_WriteToDataDestination = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = Ster_F_RefreshHistory_DataDestination], (txn) => {TableAction.DeleteRows(txn[Target]), () => TableAction.InsertRows(txn[Target], Ster_F_RefreshHistory_TransformForWriteToDataDestination), Action.DoNothing}))\r\nin\r\n  Ster_F_RefreshHistory_WriteToDataDestination;\r\nshared Ster_F_RefreshHistory_TransformForWriteToDataDestination = let\r\n    SourceTable = Table.SelectColumns(Ster_F_RefreshHistory, {\"RequestId\", \"RefreshType\", \"StartTime\", \"EndTime\", \"ErrorCode\", \"ErrorDescription\", \"Status\", \"ExtendedStatus\", \"WSID\", \"SMID\", \"StartDate\", \"EndDate\"})\r\nin\r\n    SourceTable;\r\nshared #\"Ster_Refresh type_DataDestination\" = let\r\n  Target = DefaultDestination,\r\n  ArtifactNavigation = Target{[ItemKind = \"Table\", Id = \"Ster_Refresh type\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(ArtifactNavigation, #table(type table[RefreshType = nullable Text.Type], {}), [DeleteWhenEmpty = true])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared #\"Ster_Refresh type_WriteToDataDestination\" = let\r\n  #\"Ster_Refresh type_WriteToDataDestination\" = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = #\"Ster_Refresh type_DataDestination\"], (txn) => {TableAction.DeleteRows(txn[Target]), () => TableAction.InsertRows(txn[Target], #\"Ster_Refresh type_TransformForWriteToDataDestination\"), Action.DoNothing}))\r\nin\r\n  #\"Ster_Refresh type_WriteToDataDestination\";\r\nshared #\"Ster_Refresh type_TransformForWriteToDataDestination\" = let\r\n    SourceTable = Table.SelectColumns(#\"Ster_Refresh type\", {\"RefreshType\"})\r\nin\r\n    SourceTable;\r\nshared Ster_F_notebook_Refreshes_DataDestination = let\r\n  Target = DefaultDestination,\r\n  ArtifactNavigation = Target{[ItemKind = \"Table\", Id = \"Ster_F_notebook_Refreshes\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(ArtifactNavigation, #table(type table[NotebookName = nullable Text.Type, StartTime = nullable DateTime.Type, EndTime = nullable DateTime.Type, StartDate = nullable Date.Type, EndDate = nullable Date.Type], {}), [DeleteWhenEmpty = true])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared Ster_F_notebook_Refreshes_WriteToDataDestination = let\r\n  Ster_F_notebook_Refreshes_WriteToDataDestination = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = Ster_F_notebook_Refreshes_DataDestination], (txn) => {TableAction.DeleteRows(txn[Target]), () => TableAction.InsertRows(txn[Target], Ster_F_notebook_Refreshes_TransformForWriteToDataDestination), Action.DoNothing}))\r\nin\r\n  Ster_F_notebook_Refreshes_WriteToDataDestination;\r\nshared Ster_F_notebook_Refreshes_TransformForWriteToDataDestination = let\r\n    SourceTable = Table.SelectColumns(Ster_F_notebook_Refreshes, {\"NotebookName\", \"StartTime\", \"EndTime\", \"StartDate\", \"EndDate\"})\r\nin\r\n    SourceTable;\r\nshared Ster_F_Items_DataDestination = let\r\n  Target = DefaultDestination,\r\n  ArtifactNavigation = Target{[ItemKind = \"Table\", Id = \"Ster_F_Items\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(ArtifactNavigation, #table(type table[WSID = nullable Text.Type, Type = nullable Text.Type, Id = nullable Text.Type], {}), [DeleteWhenEmpty = true])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared Ster_F_Items_WriteToDataDestination = let\r\n  Ster_F_Items_WriteToDataDestination = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = Ster_F_Items_DataDestination], (txn) => {TableAction.DeleteRows(txn[Target]), () => TableAction.InsertRows(txn[Target], Ster_F_Items_TransformForWriteToDataDestination), Action.DoNothing}))\r\nin\r\n  Ster_F_Items_WriteToDataDestination;\r\nshared Ster_F_Items_TransformForWriteToDataDestination = let\r\n    SourceTable = Table.SelectColumns(Ster_F_Items, {\"WSID\", \"Type\", \"Id\"})\r\nin\r\n    SourceTable;\r\nshared #\"Ster_Item type_DataDestination\" = let\r\n  Target = DefaultDestination,\r\n  ArtifactNavigation = Target{[ItemKind = \"Table\", Id = \"Ster_Item type\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(ArtifactNavigation, #table(type table[Type = nullable Text.Type], {}), [DeleteWhenEmpty = true])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared #\"Ster_Item type_WriteToDataDestination\" = let\r\n  #\"Ster_Item type_WriteToDataDestination\" = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = #\"Ster_Item type_DataDestination\"], (txn) => {TableAction.DeleteRows(txn[Target]), () => TableAction.InsertRows(txn[Target], #\"Ster_Item type_TransformForWriteToDataDestination\"), Action.DoNothing}))\r\nin\r\n  #\"Ster_Item type_WriteToDataDestination\";\r\nshared #\"Ster_Item type_TransformForWriteToDataDestination\" = let\r\n    SourceTable = Table.SelectColumns(#\"Ster_Item type\", {\"Type\"})\r\nin\r\n    SourceTable;\r\nshared Ster_Dates_DataDestination = let\r\n  Target = DefaultDestination,\r\n  ArtifactNavigation = Target{[ItemKind = \"Table\", Id = \"Ster_Dates\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(ArtifactNavigation, #table(type table[Date = nullable Date.Type], {}), [DeleteWhenEmpty = true])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared Ster_Dates_WriteToDataDestination = let\r\n  Ster_Dates_WriteToDataDestination = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = Ster_Dates_DataDestination], (txn) => {TableAction.DeleteRows(txn[Target]), () => TableAction.InsertRows(txn[Target], Ster_Dates_TransformForWriteToDataDestination), Action.DoNothing}))\r\nin\r\n  Ster_Dates_WriteToDataDestination;\r\nshared Ster_Dates_TransformForWriteToDataDestination = let\r\n    SourceTable = Table.SelectColumns(Ster_Dates, {\"Date\"})\r\nin\r\n    SourceTable;\r\nshared Ster_workspaces_DataDestination = let\r\n  Target = DefaultDestination,\r\n  ArtifactNavigation = Target{[ItemKind = \"Table\", Id = \"Ster_workspaces\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(ArtifactNavigation, #table(type table[Id = nullable Text.Type, CapacityId = nullable Text.Type, Name = nullable Text.Type], {}), [DeleteWhenEmpty = true])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared Ster_workspaces_WriteToDataDestination = let\r\n  Ster_workspaces_WriteToDataDestination = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = Ster_workspaces_DataDestination], (txn) => {TableAction.DeleteRows(txn[Target]), () => TableAction.InsertRows(txn[Target], Ster_workspaces_TransformForWriteToDataDestination), Action.DoNothing}))\r\nin\r\n  Ster_workspaces_WriteToDataDestination;\r\nshared Ster_workspaces_TransformForWriteToDataDestination = let\r\n    SourceTable = Table.SelectColumns(Ster_workspaces, {\"Id\", \"CapacityId\", \"Name\"})\r\nin\r\n    SourceTable;\r\nshared Ster_Capacities_DataDestination = let\r\n  Target = DefaultDestination,\r\n  ArtifactNavigation = Target{[ItemKind = \"Table\", Id = \"Ster_Capacities\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(ArtifactNavigation, #table(type table[Id = nullable Text.Type, DisplayName = nullable Text.Type, Sku = nullable Text.Type, Region = nullable Text.Type, State = nullable Text.Type], {}), [DeleteWhenEmpty = true])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared Ster_Capacities_WriteToDataDestination = let\r\n  Ster_Capacities_WriteToDataDestination = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = Ster_Capacities_DataDestination], (txn) => {TableAction.DeleteRows(txn[Target]), () => TableAction.InsertRows(txn[Target], Ster_Capacities_TransformForWriteToDataDestination), Action.DoNothing}))\r\nin\r\n  Ster_Capacities_WriteToDataDestination;\r\nshared Ster_Capacities_TransformForWriteToDataDestination = let\r\n    SourceTable = Table.SelectColumns(Ster_Capacities, {\"Id\", \"DisplayName\", \"Sku\", \"Region\", \"State\"})\r\nin\r\n    SourceTable;\r\nshared #\"Ster_Column Type_DataDestination\" = let\r\n  Target = DefaultDestination,\r\n  ArtifactNavigation = Target{[ItemKind = \"Table\", Id = \"Ster_Column Type\"]}?[Data]?,\r\n  Table = NavigationTable.CreateTableOnDemand(ArtifactNavigation, #table(type table[Type = nullable Text.Type], {}), [DeleteWhenEmpty = true])\r\nin\r\n  Table;\r\n[Staging = \"FastCopyStaging\"]\r\nshared #\"Ster_Column Type_WriteToDataDestination\" = let\r\n  #\"Ster_Column Type_WriteToDataDestination\" = Pipeline.ExecuteAction(ValueAction.WithTransaction([Target = #\"Ster_Column Type_DataDestination\"], (txn) => {TableAction.DeleteRows(txn[Target]), () => TableAction.InsertRows(txn[Target], #\"Ster_Column Type_TransformForWriteToDataDestination\"), Action.DoNothing}))\r\nin\r\n  #\"Ster_Column Type_WriteToDataDestination\";\r\nshared #\"Ster_Column Type_TransformForWriteToDataDestination\" = let\r\n    SourceTable = Table.SelectColumns(#\"Ster_Column Type\", {\"Type\"})\r\nin\r\n    SourceTable;\r\n","connectionOverrides":[{"path":"Lakehouse","kind":"Lakehouse","provider":"CdsA","authenticationKind":null,"environmentName":null,"apiName":null,"connectionName":"{\"kind\":\"Lakehouse\",\"path\":\"Lakehouse\"}","audience":null}],"trustedConnections":[{"path":"Lakehouse","kind":"Lakehouse","provider":"CdsA","authenticationKind":null,"environmentName":null,"apiName":null,"connectionName":"{\"kind\":\"Lakehouse\",\"path\":\"Lakehouse\"}","audience":null}]},"annotations":[{"name":"pbi:QueryGroups","value":"[{\"Id\":\"d1e1e7fd-7498-40c3-85d6-d65e17f81a52\",\"Name\":\"Source queries\",\"Description\":\"\",\"ParentId\":null,\"Order\":0},{\"Id\":\"c648a9d7-2e63-42fb-b06b-060dcea48624\",\"Name\":\"Refreshes\",\"Description\":\"\",\"ParentId\":null,\"Order\":0},{\"Id\":\"50503d82-9e7e-46cd-b228-b5f05b00bf62\",\"Name\":\"Relationships\",\"Description\":\"\",\"ParentId\":null,\"Order\":1},{\"Id\":\"b38d21bb-3436-4f7f-9df4-cf522946ecd5\",\"Name\":\"Users\",\"Description\":\"\",\"ParentId\":null,\"Order\":2},{\"Id\":\"f7095952-ce17-442b-8aaf-f171122568de\",\"Name\":\"Columns\",\"Description\":\"\",\"ParentId\":null,\"Order\":3},{\"Id\":\"fa525509-f125-4478-a369-bda95ba86186\",\"Name\":\"Measures\",\"Description\":\"\",\"ParentId\":null,\"Order\":0},{\"Id\":\"720b6596-84e8-4ac9-b1d8-7350b2a9753e\",\"Name\":\"Items\",\"Description\":\"\",\"ParentId\":null,\"Order\":1},{\"Id\":\"496a9fb5-9cf7-43d8-bae3-8cbdd98a7645\",\"Name\":\"Verwerking\",\"Description\":\"\",\"ParentId\":\"d1e1e7fd-7498-40c3-85d6-d65e17f81a52\",\"Order\":0}]"}]}